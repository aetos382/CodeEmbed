#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.2.{build}                 # You can use {branch} to, for example

# Do not build on tags (GitHub only)
skip_tags: true

skip_commits:
  message: /#nobuild/

# fetch repository as zip archive
shallow_clone: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Operating system (build VM template)
# os: Windows Server 2012 R2
os: Windows Server 2012 R2

# environment variables
environment:
  github_oauth_token:
    secure: jqtdWF2szgieS3RJDDjtE6Ttj0QXORa+kmLJkHCCBpKsyMz/UeFOZSfIP2jHu9L2
  deploy_password:
    secure: KgSo90aar4SKwjJH91cbxC+fn0ZXhzRnr29DflE9jJ2cm2Y4EzdLkKy7C2stLYfYcGsXxb41VUQiwjHFtSvXTA==
  msbuild_logger:
    /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

# scripts that run after cloning repository
install:
  - cinst WAWSDeploy -y

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: false

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

build:
  parallel: true           # enable MSBuild parallel builds
#  project: CodeEmbed.sln   # path to Visual Studio solution or project

build_script:
  - msbuild.exe CodeEmbed.GitHubClient\CodeEmbed.GitHubClient.csproj /t:Build /nologo /l:"$(msbuild_logger)" /noconlog
  - msbuild.exe CodeEmbed.GitHubClient.Tests\CodeEmbed.GitHubClient.Tests.csproj /t:Build /nologo /l:"$(msbuild_logger)" /noconlog
  - msbuild.exe CodeEmbed.Web.Http\CodeEmbed.Web.Http.csproj /t:Build /nologo /l:"$(msbuild_logger)" /noconlog
  - msbuild.exe CodeEmbed.Web.Api\CodeEmbed.Web.Api.csproj /t:Build;WebPublish /nologo /l:"$(msbuild_logger)" /noconlog /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:PrecompileBeforePublish=True /p:PublishUrl="..\Publish\CodeEmbed.Web.Api"
  - msbuild.exe CodeEmbed.Web.Api.Tests\CodeEmbed.Web.Api.Tests.csproj /t:Build /nologo /l:"$(msbuild_logger)" /noconlog
  - msbuild.exe CodeEmbed.Web.Site\CodeEmbed.Web.Site.csproj /t:Build;WebPublish /nologo /l:"$(msbuild_logger)" /noconlog /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:PrecompileBeforePublish=True /p:AspNetBuildViews=True /p:PublishUrl="..\Publish\CodeEmbed.Web.Site"

  # MSBuild verbosity level
  verbosity: normal

# scripts to run before build
before_build:
  - ps: .\beforeBuild.ps1

#---------------------------------#
#       tests configuration       #
#---------------------------------#

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  - path: Publish
  - path: CodeEmbed.Web.Http
  - path: CodeEmbed.Web.Api

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# to run your custom scripts instead of provider deployments
deploy_script: deploy.cmd

#---------------------------------#
#         notifications           #
#---------------------------------#

# on build failure
notifications:

  # Email
  - provider: Email
    to: build-notification@aerie.jp
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
