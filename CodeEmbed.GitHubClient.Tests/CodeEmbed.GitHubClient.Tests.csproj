<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{61FF2F1B-F1C1-4480-B6D6-803063D18CD5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CodeEmbed.GitHubClient.Tests</RootNamespace>
    <AssemblyName>CodeEmbed.GitHubClient.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;BUILD_MOCK</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;BUILD_MOCK</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Newtonsoft.Json.6.0.8\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Net.Http" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\AuthorizedUserMock.Generated.cs">
      <Link>Models\AuthorizedUserMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\CommitLinkMock.Generated.cs">
      <Link>Models\CommitLinkMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\CommitSignatureMock.Generated.cs">
      <Link>Models\CommitSignatureMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistBaseMock.Generated.cs">
      <Link>Models\GistBaseMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistChangeStatusMock.Generated.cs">
      <Link>Models\GistChangeStatusMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistFileContentMock.Generated.cs">
      <Link>Models\GistFileContentMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistFileMock.Generated.cs">
      <Link>Models\GistFileMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistForkMock.Generated.cs">
      <Link>Models\GistForkMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistHistoryMock.Generated.cs">
      <Link>Models\GistHistoryMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistMock.Generated.cs">
      <Link>Models\GistMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GistSummaryMock.Generated.cs">
      <Link>Models\GistSummaryMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GitBlobMock.Generated.cs">
      <Link>Models\GitBlobMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GitCommitMock.Generated.cs">
      <Link>Models\GitCommitMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GitObjectMock.Generated.cs">
      <Link>Models\GitObjectMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GitReferenceMock.Generated.cs">
      <Link>Models\GitReferenceMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GitTreeMock.Generated.cs">
      <Link>Models\GitTreeMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\GitTreeNodeMock.Generated.cs">
      <Link>Models\GitTreeNodeMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\PermissionsMock.Generated.cs">
      <Link>Models\PermissionsMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\PublicRepositoryMock.Generated.cs">
      <Link>Models\PublicRepositoryMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\RepositoryMock.Generated.cs">
      <Link>Models\RepositoryMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\RepositoryUserMock.Generated.cs">
      <Link>Models\RepositoryUserMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\UserMock.Generated.cs">
      <Link>Models\UserMock.Generated.cs</Link>
    </Compile>
    <Compile Include="..\CodeEmbed.GitHubClient\Models\UserPlanMock.Generated.cs">
      <Link>Models\UserPlanMock.Generated.cs</Link>
    </Compile>
    <Compile Include="GitHubClientExtensionTests.cs" />
    <Compile Include="MockClient.cs" />
    <Compile Include="MockConnection.cs" />
    <Compile Include="Models\RepositoryTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="GitHubClientCodeExtensionTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Models\Data\PublicRepository.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Models\Data\RepositoryUser.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Models\Data\Repository.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\CodeEmbed.GitHubClient\CodeEmbed.GitHubClient.csproj">
      <Project>{66479f3b-f2b8-484d-8192-0089694a0311}</Project>
      <Name>CodeEmbed.GitHubClient</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDictionary Include="..\CustomDictionary.xml">
      <Link>CustomDictionary.xml</Link>
    </CodeAnalysisDictionary>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>このプロジェクトは、このコンピューターにはない NuGet パッケージを参照しています。これらをダウンロードするには、NuGet パッケージの復元を有効にしてください。詳細については、http://go.microsoft.com/fwlink/?LinkID=322105 を参照してください。不足しているファイルは {0} です。</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>